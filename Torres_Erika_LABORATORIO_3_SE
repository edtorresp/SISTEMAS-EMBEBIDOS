/*
*     UNIVERSIDAD TÉCNICA DEL NORTE
*          FACULTAD DE INGENIERIA EN CIENCIAS APLICADAS
*                        SISTEMAS EMBEBIDOS
*                         LABORATORIO Nro 3
*                         
* INTEGRANES: ALMEIDA KATHERINE
*             TANDAYAMO SMITH
*             TORRES ERIKA
* LABORATORIO III:  COMUNICACION - CAD - INTERRUPCIONES 
* CODIGO III
* OBJETIVO: Diseñar un sistema domótico de un reloj horero-minutero observado en una LCD incluyendo dos interrupciones, la primera sera de encendido-apagado- y el siguiente el modo de funcionamiento.
* FUNCIONES:
*          LiquidCrystal.h     
*          MsTimer2.h   
*          attachinterrupt(interrupt,rutina.modo)
*/
#include <LiquidCrystal.h>
#include <MsTimer2.h>
LiquidCrystal lcd {13,12,11,10,9,8};            // pines lcd
const int led[4]={7,6,5,4};                     // pines leds
const int s1=A2;                                // pines para los sensores 
const int s2=A3;
const int s3=A4;
const int s4=A5;
int minutos=0;                                  // variable  minutos
int horas=0;                                    // variable  horas
int on=0;                                       // variable del sistema para opciones
int on2=0;                                      // variable del sistema para opciones
int i;                                          // variables ciclos
int rand1;                                      // variable leds randomicos
int horas2;                                     // variable cambio de hora
int minutos2;                                   // variable cambio de minutos
void setup() {
  for(i=0;i<4;i++)                              // ciclo for para leds
  {
    pinMode(led[i],OUTPUT);                     // declarar modo de los leds
  }
  pinMode(s1,INPUT);                            // declarar del modo de los sensores
  pinMode(s2,INPUT);
  pinMode(s3,INPUT);
  pinMode(s4,INPUT);
  i=0;
  Serial.begin(9600);                          
  lcd.begin(16,2);                             
  attachInterrupt(0,iniciador,HIGH);            // interrupciones 1
  attachInterrupt(1,seleccionador,HIGH);       // interrupciones 2
  MsTimer2::set(1000,reloj); 
  
  // configura el timer 2 a 1 segundo-un segundo segundero
  Serial.println("    LABORATORIO 03 ");
  Serial.println(" SISTEMAS EMBEBIDOS ");
  Serial.println(" ");
  Serial.println("INTEGRANTES: ");
  Serial.println("ALMEIDA KATHERINE");
  Serial.println("TANDAYAMO SMITH");
  Serial.println("TORRES ERIKA ");
  Serial.println(" ");
  Serial.println("***********************************************"); 
  Serial.println("Presione para encender el sistema");
}
/////////////////////////////////////////////VOID PARA EL LLAMADO DE RUTINAS////////////////////////////////////////////

void loop() {
  if(on==2)         
  {
    switch(on2)
    {
      case 1:
      modo1();
      break;
      case 2: 
      modo2();
      break;
      case 3:
      modo3();
      break;
    }
  }
}

void iniciador (){            
  switch (on)                 
  {
    case 0:
    MsTimer2::start();        
    Serial.println("SELECCION DEL MODO");
    on++;
    break;
    case 1:
    Serial.println("MODO EN EJECUCION");
    on++;
    break;
    case 2:
    Serial.println("FIN DEL SISTEMA");
    on=0;               
    on2=0;
    lcd.clear();        
    MsTimer2::stop();   
  }
}

void seleccionador (){         
  if(on==1)
  {
    switch(on2)                   
    {
      case 0:
      Serial.println("Activacion de leds de forma aleatoria");
      on2++;
      break;
      case 1:
      Serial.println("Cambio de la hora-reloj");
      on2++;
      break;
      case 2:
      Serial.println("Seguridad de sensores");
      on2++;
      break;
      case 3:
      Serial.println("Selccion de modos");
      on2=0;        
      break;
    }
  }
  if(on==2)
  {
    on=0;      
    on2=0;      
    Serial.println("Salio de la ejecucion del modo");    
  }
}

/////////////////////////////////////////////////// MODO UNO////////////////////////////////
void modo1 (){
  for(i=0;i<5;i++)
  {
     rand1=random(1,5);               
     digitalWrite(led[rand1],HIGH);  
     delay(1000);
     digitalWrite(led[rand1],LOW);
     delay(1000);
  } 
  i=0;      
  on=0;
  on2=0; 
}

/////////////////////////////////////////////////// MODO DOS////////////////////////////
void modo2 (){
  horas2=analogRead(0);                
  horas=map(horas2,0,1023,0,23);       
  minutos2=analogRead(1);             
  minutos=map(minutos2,0,1023,0,59);  
}

/////////////////////////////////////////////////// MODO TRES////////////////////////////
void modo3(){
  if(digitalRead(s1)==HIGH||digitalRead(s2)==HIGH||digitalRead(s3)==HIGH||digitalRead(s4)==HIGH){   // condicional para los sensores sin son encendidos con el pulsador
    Serial.println("Sensor activado verificar seguridad");
    delay(200);
  }
}
///////////////////////////////////////////////////METODO DE RELOJ////////////////////////////
void reloj(){         
    if(minutos<59)                        
    {
      minutos++;                          
    }else
    {
      minutos=0;                          
      if(horas<23)                        
      {
        horas++;                                      
      }else
      {
        horas=0;                          
      }
    }
    
lcd.clear();            
lcd.setCursor(0,0);
lcd.print("HORAS");
lcd.setCursor(5,1);
lcd.print(":");
lcd.setCursor(7,0);
lcd.print("MINUTOS");
lcd.setCursor(1,1);
lcd.print(horas);
lcd.setCursor(7,1);
lcd.print(minutos);

}
